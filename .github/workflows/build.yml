name: 🚀 Haxball.JS CI/CD

on:
  workflow_dispatch: # Allow manual triggers
  push:
    branches: [main, develop]
    paths:
      - "scripts/nodeify.js"
      - "package.json"
      - "package-lock.json"
  pull_request:
    branches: [main]
    paths:
      - "scripts/nodeify.js"
      - "package.json"
      - "package-lock.json"

jobs:
  build:
    name: 🛠️ Build Source
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.nodeify.outputs.hash }}
    steps:
      - uses: actions/checkout@v3

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: "npm"

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🔨 Build Source Code
        id: nodeify
        run: |
          OUTPUT=$(npm run build)
          if [[ $OUTPUT =~ SUCCESS:([a-zA-Z0-9]+) ]]; then
            HASH="${BASH_REMATCH[1]}"
            echo "hash=$HASH" >> $GITHUB_OUTPUT
            echo "🎉 Build successful with hash: $HASH"
          else
            echo "❌ Build failed: $OUTPUT"
            exit 1
          fi

      - name: 📤 Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: haxball-build
          path: src/build.js
          retention-days: 7

  test:
    needs: build
    name: 🧪 Test (${{ matrix.os }}, Node ${{ matrix.node-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: 📥 Download Build
        uses: actions/download-artifact@v3
        with:
          name: haxball-build
          path: src

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🧪 Run Core Tests
        run: npm test
        env:
          TEST_PROXY: ""

      - name: 🌐 Run Proxy Tests (Optional)
        if: always()
        continue-on-error: true
        run: npm test
        env:
          TEST_PROXY: "1"

  publish:
    needs: build
    name: 📢 Publish Build
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 📥 Download Build
        uses: actions/download-artifact@v3
        with:
          name: haxball-build
          path: src

      - name: 🔄 Prepare Build
        run: |
          mv src/build.js src/index.js
          echo "✨ Build prepared for publishing"

      - name: 🚀 Commit and Push
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          if [[ -n "$(git status --porcelain)" ]]; then
            git add src/index.js
            git commit -m "🤖 Update Haxball.JS Build (${{ needs.build.outputs.hash }})

            🔄 Auto-generated by GitHub Actions
            🏷️ Build Hash: ${{ needs.build.outputs.hash }}
            ⚡ Includes latest Haxball updates"
            git push
          else
            echo "📝 No changes to commit"
          fi
